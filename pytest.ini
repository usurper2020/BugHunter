[pytest]
# Test file patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery
testpaths = tests

# Logging settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    security: marks tests as security-related
    ui: marks tests as UI-related
    api: marks tests as API-related
    unit: marks tests as unit tests

# Test execution
addopts = 
    --verbose
    --strict-markers
    -ra
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail

# Environment variables
env =
    D:TEST_ENV=testing
    D:TEST_DATA_DIR=tests/data

# Coverage settings
[coverage:run]
source = .
omit =
    tests/*
    setup.py
    */__init__.py
    */migrations/*
    */settings/*
    */wsgi.py
    */asgi.py
    manage.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    if False:
    if TYPE_CHECKING:

# Custom settings
[tool:pytest]
minversion = 6.0
required_plugins = 
    pytest-cov
    pytest-env
    pytest-mock
    pytest-timeout
    pytest-xdist
timeout = 300
