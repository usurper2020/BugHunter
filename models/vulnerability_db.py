"""
Vulnerability database interface for the BugHunter application.

This module provides access to CVE (Common Vulnerabilities and Exposures)
information through public APIs. It enables searching and retrieving
detailed vulnerability information for security analysis.
"""

import requests

class VulnerabilityDatabase:
    """
    Interface to CVE vulnerability database.
    
    This class provides functionality to:
    - Search for known vulnerabilities
    - Retrieve detailed CVE information
    - Access vulnerability descriptions and metadata
    
    Uses the CIRCL CVE API (https://cve.circl.lu) as the data source
    for vulnerability information.
    """
    
    def __init__(self):
        """
        Initialize the VulnerabilityDatabase instance.
        
        Sets up the base URL for the CVE API endpoint.
        Currently uses the CIRCL CVE API as the default source.
        """
        self.cve_api_url = "https://cve.circl.lu/api/cve/"  # Example CVE API

    def search_vulnerability(self, query):
        """
        Search for a specific vulnerability by CVE ID.
        
        Parameters:
            query (str): CVE ID or search term to look up
                        (e.g., 'CVE-2021-44228')
            
        Returns:
            dict: JSON response containing vulnerability details
                 if found, None if not found or error occurs
            
        Note:
            Response includes vulnerability description, severity,
            references, and other metadata when available.
        """
        response = requests.get(f"{self.cve_api_url}{query}")
        if response.status_code == 200:
            return response.json()
        else:
            return None
